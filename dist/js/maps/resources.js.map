{"version":3,"sources":["button.js"],"names":["$","Plugin","option","this","each","$this","data","options","Button","toggle","setState","element","$element","extend","DEFAULTS","isLoading","VERSION","loadingText","prototype","state","d","$el","val","is","resetText","setTimeout","proxy","addClass","attr","prop","removeClass","removeAttr","changed","$parent","closest","length","$input","find","hasClass","toggleClass","trigger","old","fn","button","Constructor","noConflict","document","on","e","$btn","target","call","preventDefault","first","test","type","jQuery"],"mappings":"CASC,SAAUA,GACT,YAmEA,SAASC,QAAOC,QACd,MAAOC,MAAKC,KAAK,WACf,GAAIC,OAAUL,EAAEG,MACZG,KAAUD,MAAMC,KAAK,aACrBC,QAA2B,gBAAVL,SAAsBA,MAEtCI,OAAMD,MAAMC,KAAK,YAAcA,KAAO,GAAIE,QAAOL,KAAMI,UAE9C,UAAVL,OAAoBI,KAAKG,SACpBP,QAAQI,KAAKI,SAASR,UAvEnC,GAAIM,QAAS,SAAUG,QAASJ,SAC9BJ,KAAKS,SAAYZ,EAAEW,SACnBR,KAAKI,QAAYP,EAAEa,UAAWL,OAAOM,SAAUP,SAC/CJ,KAAKY,WAAY,EAGnBP,QAAOQ,QAAW,QAElBR,OAAOM,UACLG,YAAa,cAGfT,OAAOU,UAAUR,SAAW,SAAUS,OACpC,GAAIC,GAAO,WACPC,IAAOlB,KAAKS,SACZU,IAAOD,IAAIE,GAAG,SAAW,MAAQ,OACjCjB,KAAOe,IAAIf,MAEfa,QAAS,OAEa,MAAlBb,KAAKkB,WAAmBH,IAAIf,KAAK,YAAae,IAAIC,QAGtDG,WAAWzB,EAAE0B,MAAM,WACjBL,IAAIC,KAAoB,MAAfhB,KAAKa,OAAiBhB,KAAKI,QAAQY,OAASb,KAAKa,QAE7C,eAATA,OACFhB,KAAKY,WAAY,EACjBM,IAAIM,SAASP,GAAGQ,KAAKR,EAAGA,GAAGS,KAAKT,GAAG,IAC1BjB,KAAKY,YACdZ,KAAKY,WAAY,EACjBM,IAAIS,YAAYV,GAAGW,WAAWX,GAAGS,KAAKT,GAAG,KAE1CjB,MAAO,IAGZK,OAAOU,UAAUT,OAAS,WACxB,GAAIuB,UAAU,EACVC,QAAU9B,KAAKS,SAASsB,QAAQ,0BAEpC,IAAID,QAAQE,OAAQ,CAClB,GAAIC,QAASjC,KAAKS,SAASyB,KAAK,QACL,UAAvBD,OAAOP,KAAK,SACVO,OAAOP,KAAK,aAAYG,SAAU,GACtCC,QAAQI,KAAK,WAAWP,YAAY,UACpC3B,KAAKS,SAASe,SAAS,WACS,YAAvBS,OAAOP,KAAK,UAChBO,OAAOP,KAAK,aAAgB1B,KAAKS,SAAS0B,SAAS,YAAWN,SAAU,GAC7E7B,KAAKS,SAAS2B,YAAY,WAE5BH,OAAOP,KAAK,UAAW1B,KAAKS,SAAS0B,SAAS,WAC1CN,SAASI,OAAOI,QAAQ,cAE5BrC,MAAKS,SAASgB,KAAK,gBAAiBzB,KAAKS,SAAS0B,SAAS,WAC3DnC,KAAKS,SAAS2B,YAAY,UAqB9B,IAAIE,KAAMzC,EAAE0C,GAAGC,MAEf3C,GAAE0C,GAAGC,OAAqB1C,OAC1BD,EAAE0C,GAAGC,OAAOC,YAAcpC,OAM1BR,EAAE0C,GAAGC,OAAOE,WAAa,WAEvB,MADA7C,GAAE0C,GAAGC,OAASF,IACPtC,MAOTH,EAAE8C,UACCC,GAAG,2BAA4B,0BAA2B,SAAUC,GACnE,GAAIC,MAAOjD,EAAEgD,EAAEE,QAAQhB,QAAQ,OAC/BjC,QAAOkD,KAAKF,KAAM,UACZjD,EAAEgD,EAAEE,QAAQ3B,GAAG,iDAEnByB,EAAEI,iBAEEH,KAAK1B,GAAG,gBAAiB0B,KAAKT,QAAQ,SACrCS,KAAKZ,KAAK,gCAAgCgB,QAAQb,QAAQ,YAGlEO,GAAG,mDAAoD,0BAA2B,SAAUC,GAC3FhD,EAAEgD,EAAEE,QAAQhB,QAAQ,QAAQK,YAAY,QAAS,eAAee,KAAKN,EAAEO,UAG3EC","file":"../resources.js","sourcesContent":["/* ========================================================================\r\n * Bootstrap: button.js v3.3.7\r\n * http://getbootstrap.com/javascript/#buttons\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // BUTTON PUBLIC CLASS DEFINITION\r\n  // ==============================\r\n\r\n  var Button = function (element, options) {\r\n    this.$element  = $(element)\r\n    this.options   = $.extend({}, Button.DEFAULTS, options)\r\n    this.isLoading = false\r\n  }\r\n\r\n  Button.VERSION  = '3.3.7'\r\n\r\n  Button.DEFAULTS = {\r\n    loadingText: 'loading...'\r\n  }\r\n\r\n  Button.prototype.setState = function (state) {\r\n    var d    = 'disabled'\r\n    var $el  = this.$element\r\n    var val  = $el.is('input') ? 'val' : 'html'\r\n    var data = $el.data()\r\n\r\n    state += 'Text'\r\n\r\n    if (data.resetText == null) $el.data('resetText', $el[val]())\r\n\r\n    // push to event loop to allow forms to submit\r\n    setTimeout($.proxy(function () {\r\n      $el[val](data[state] == null ? this.options[state] : data[state])\r\n\r\n      if (state == 'loadingText') {\r\n        this.isLoading = true\r\n        $el.addClass(d).attr(d, d).prop(d, true)\r\n      } else if (this.isLoading) {\r\n        this.isLoading = false\r\n        $el.removeClass(d).removeAttr(d).prop(d, false)\r\n      }\r\n    }, this), 0)\r\n  }\r\n\r\n  Button.prototype.toggle = function () {\r\n    var changed = true\r\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\r\n\r\n    if ($parent.length) {\r\n      var $input = this.$element.find('input')\r\n      if ($input.prop('type') == 'radio') {\r\n        if ($input.prop('checked')) changed = false\r\n        $parent.find('.active').removeClass('active')\r\n        this.$element.addClass('active')\r\n      } else if ($input.prop('type') == 'checkbox') {\r\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\r\n        this.$element.toggleClass('active')\r\n      }\r\n      $input.prop('checked', this.$element.hasClass('active'))\r\n      if (changed) $input.trigger('change')\r\n    } else {\r\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\r\n      this.$element.toggleClass('active')\r\n    }\r\n  }\r\n\r\n\r\n  // BUTTON PLUGIN DEFINITION\r\n  // ========================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.button')\r\n      var options = typeof option == 'object' && option\r\n\r\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\r\n\r\n      if (option == 'toggle') data.toggle()\r\n      else if (option) data.setState(option)\r\n    })\r\n  }\r\n\r\n  var old = $.fn.button\r\n\r\n  $.fn.button             = Plugin\r\n  $.fn.button.Constructor = Button\r\n\r\n\r\n  // BUTTON NO CONFLICT\r\n  // ==================\r\n\r\n  $.fn.button.noConflict = function () {\r\n    $.fn.button = old\r\n    return this\r\n  }\r\n\r\n\r\n  // BUTTON DATA-API\r\n  // ===============\r\n\r\n  $(document)\r\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\r\n      var $btn = $(e.target).closest('.btn')\r\n      Plugin.call($btn, 'toggle')\r\n      if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\r\n        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\r\n        e.preventDefault()\r\n        // The target component still receive the focus\r\n        if ($btn.is('input,button')) $btn.trigger('focus')\r\n        else $btn.find('input:visible,button:visible').first().trigger('focus')\r\n      }\r\n    })\r\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\r\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\r\n    })\r\n\r\n}(jQuery);\r\n"]}